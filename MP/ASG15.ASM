.MODEL SMALL

.STACK 64

.DATA
	ONE DB 1, 2, 3, 4, 5, 5, 2, 8, 6, 8, 2, '$'
	TWO DB 'ABHICDG$'
	INTEGER DB 'INTEGER: $'
	CONSTR DB 'CONVERTED STRING: $'
	STRING DB 'STRING: $'
	CONINT DB 'CONVERTED INTEGER: $'

.CODE
MAIN PROC NEAR

	MOV AX, @DATA
	MOV DS, AX

	LEA SI, INTEGER

	MOV DL, [SI]
   ABC: MOV AH, 02H
	INT 21H
	INC SI
	MOV DL, [SI]
	CMP DL, '$'
	JNE ABC

	LEA BX, ONE

	MOV DL, [BX]
   XXX: ADD DL, 30H
	MOV AH, 02H
	INT 21H

	MOV DL, ' '
	MOV AH, 02H
	INT 21H

	INC BX
	MOV DL, [BX]
	CMP DL, '$'
	JNE XXX

	MOV DL, 0AH
	INT 21H
	INT 0AH

	LEA BX, CONSTR

	MOV DL, [BX]
   DEF: MOV AH, 02H
	INT 21H
	INC BX
	MOV DL, [BX]
	CMP DL, '$'
	JNE DEF

	LEA SI, ONE

	MOV DL, [SI]
   YYY: ADD DL, 40H
	MOV AH, 02H
	INT 21H

	MOV DL, ' '
	MOV AH, 02H
	INT 21H

	INC SI
	MOV DL, [SI]
	CMP DL, '$'
	JNE YYY

	MOV DL, 0AH
	INT 21H
	INT 0AH

	MOV DL, 0AH
	INT 21H
	INT 0AH

	LEA SI, STRING

	MOV DL, [SI]
   GHI: MOV AH, 02H
	INT 21H
	INC SI
	MOV DL, [SI]
	CMP DL, '$'
	JNE GHI

	LEA BX, TWO

	MOV DL, [BX]
   ZZZ: MOV AH, 02H
	INT 21H

	MOV DL, ' '
	MOV AH, 02H
	INT 21H

	INC BX
	MOV DL, [BX]
	CMP DL, '$'
	JNE ZZZ

	MOV DL, 0AH
	INT 21H
	INT 0AH

	LEA BX, CONINT

	MOV DL, [BX]
   JKL: MOV AH, 02H
	INT 21H
	INC BX
	MOV DL, [BX]
	CMP DL, '$'
	JNE JKL

	LEA SI, TWO

	MOV DL, [SI]
   WWW: SUB DL, 10H
	MOV AH, 02H
	INT 21H

	MOV DL, ' '
	MOV AH, 02H
	INT 21H

	INC SI
	MOV DL, [SI]
	CMP DL, '$'
	JNE WWW

	MOV AX, 4C00H
	INT 21H
MAIN ENDP
END MAIN